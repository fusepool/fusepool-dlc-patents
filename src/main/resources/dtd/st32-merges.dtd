<?xml version="1.0" encoding="utf-8"?>


<!--

  Mathematical and Chemical definitions merged from
  EPO ST32 DTD (converted from SGML -> XML)

  These constructs will be set off from the main
  models by the namespaces:
    st32 => http://www.matrixware.com/ns/st32/
-->
<!ENTITY % st32namespaces "
   xmlns:st32 CDATA #FIXED 'http://www.matrixware.com/ns/st32/'
">

<!-- ******************** Pseudo IN-LINE CHEMISTRY *****************         -->
<!--                                                                         -->
<!ELEMENT st32:che     (%ptext; | st32:df | st32:dfg | st32:f)* >
<!ATTLIST st32:che
  id       ID      #IMPLIED 
  num     CDATA   #IMPLIED
  %st32namespaces;
>
<!ELEMENT st32:chr     (%ptext; | st32:df | st32:dfg | st32:f)* >
<!ATTLIST st32:chr
  id       ID      #IMPLIED
  num      CDATA   #IMPLIED
  %st32namespaces;
>
<!ELEMENT st32:crf     EMPTY>
<!ATTLIST st32:crf
  refid    IDREF   #REQUIRED
  %st32namespaces;
>


<!-- MATHEMATICAL ENTITIES -->
<!ENTITY % elem "st32:plex|st32:sum|st32:integral|st32:product|st32:sqrt|st32:root|st32:square
    |st32:power|st32:fence|st32:vec|st32:matrix|st32:pile|st32:tensor|st32:frac|st32:sup|st32:sub">
<!ENTITY % layout "st32:mark|st32:markref|st32:break|st32:box|st32:middle|st32:ov|st32:roman|st32:italic">
<!ENTITY % formel "#PCDATA|%elem;|%layout;|img">
<!ENTITY % fencty "paren|bracket|brace|bar|angbrack|solidus|none">

<!ENTITY % align  "centre | center | left | right">
<!ENTITY % style  "single | double | triple | dash | dots | bold">
<!ENTITY % type   "dot | dotdot | dot3 | dot4 | tie | tiebrace | circle |
                   hat | hacek | acute | grave | cedil | ring | macron |
                   ogonek | dblac | breve | tilde | vec | rvec |
                   dyad | caret | prime | dprime | plus | bar | none">




<!--                                                                         -->
<!-- The following elements, etc. are ISO/TR 9573 based and recommended      -->
<!--                                                                         -->
<!-- In-line formula -->
<!ELEMENT st32:f      (%formel;)* >
<!ATTLIST st32:f
  %st32namespaces;
>
<!-- Display formula -->
<!ELEMENT st32:df     (%formel;)* >
<!ATTLIST st32:df     align    (%align;) "center"
                 num      CDATA   #IMPLIED  
                 id       ID      #IMPLIED
  %st32namespaces;
 >                
<!ELEMENT st32:dfg    (st32:df+)>
<!ATTLIST st32:dfg    align    (%align;) "center"
                 num      CDATA   #IMPLIED 
                 id       ID      #IMPLIED
  %st32namespaces;
>
<!ELEMENT st32:dfref  EMPTY>
<!ATTLIST st32:dfref  refid    IDREF   #REQUIRED
                 page     (yes|no)  "yes"
  %st32namespaces;
>
<!ELEMENT st32:sup    (%formel;)*>
<!ELEMENT st32:sub    (%formel;)*>
<!ATTLIST st32:sub
  pos   (pre|mid|post) "post"
  %st32namespaces;
>
<!ATTLIST st32:sup
  pos   (pre|mid|post) "post"
  %st32namespaces;
>
<!ELEMENT st32:frac    (%formel; | st32:over)*>
<!ATTLIST st32:frac   align    (%align;) "center"
  %st32namespaces;
>
<!ELEMENT st32:over   (%formel;)*>
<!ATTLIST st32:over
  %st32namespaces;
>

<!--                                                                         -->
<!-- ******************** CONSTRUCTS WITH 'FROM' 'TO' 'OF' *********         -->
<!--                                                                         -->
<!ELEMENT st32:plex   (st32:operator,(st32:from|st32:to)*,st32:of?)>
<!ATTLIST st32:plex
  %st32namespaces;
>
<!ELEMENT st32:operator   (#PCDATA) >             
<!ATTLIST st32:operator
  %st32namespaces;
>
<!ELEMENT st32:from      (%formel;)*     >       
<!ATTLIST st32:from
  %st32namespaces;
>
<!ELEMENT st32:to          (%formel;)*      >      
<!ATTLIST st32:to
  %st32namespaces;
>
<!ELEMENT st32:of           (%formel;)*      >      
<!ATTLIST st32:of
  %st32namespaces;
>
<!ELEMENT st32:sum          ((st32:from|st32:to)*,st32:of?) >    
<!ATTLIST st32:sum
  %st32namespaces;
>
<!ELEMENT st32:integral     ((st32:from|st32:to)*,st32:of?)  >   
<!ATTLIST st32:integral
  %st32namespaces;
>
<!ELEMENT st32:product     ((st32:from|st32:to)*,st32:of?)  >   
<!ATTLIST st32:product
  %st32namespaces;
>

<!--                                                                         -->
<!-- ******************** ROOTS AND POWERS       *******************         -->
<!--                                                                         -->
<!ELEMENT st32:sqrt         (%formel;)*>           
<!ATTLIST st32:sqrt
  %st32namespaces;
>
<!ELEMENT st32:root         (%formel; | st32:of)*  >    
<!ATTLIST st32:root
  %st32namespaces;
>
<!ELEMENT st32:square    (%formel;)*>           
<!ATTLIST st32:square
  %st32namespaces;
>
<!ELEMENT st32:power      (%formel; | st32:of)* >     
<!ATTLIST st32:power
  %st32namespaces;
>

<!--                                                                         -->
<!-- ******************** FENCES AND HIGHLIGHTS  *******************         -->
<!--                                                                         -->
<!ELEMENT st32:fence       (%formel;)*  >          
<!ATTLIST st32:fence  type     (%fencty;) "paren"     
                 style    (%style;)  "single"    
                 open     CDATA   #IMPLIED       
                 close    CDATA   #IMPLIED>       
<!--                                                                         -->
<!-- ******************** VECTORS, MATRICES, PILES *****************         -->
<!--                                                                         -->
<!ELEMENT st32:vec        (%formel;)*>            
<!ELEMENT st32:matrix     (st32:col+)>                 
<!ELEMENT st32:col        (%formel; | st32:above)* >  
<!ATTLIST st32:col             align (%align;) "center">
                                                 
<!ELEMENT st32:pile      (%formel; | st32:above)*   >
<!ATTLIST st32:pile   spc      (norm | close) "norm"  
                 align    (%align;) "center">     
<!ELEMENT st32:above    (%formel;)* >         
<!--                                                                         -->
<!-- ******************** LAYOUT ORIENTED CODING   *****************         -->
<!--                                                                         -->
<!ELEMENT st32:mark      EMPTY >                 
<!ATTLIST st32:mark   id       ID      #REQUIRED>      
<!ELEMENT st32:markref      EMPTY  >                
<!ATTLIST st32:markref refid   IDREF   #REQUIRED  >    
<!ELEMENT st32:break    EMPTY >                 
<!ATTLIST st32:break  type (required|optional) "required">
                                                 
<!ELEMENT st32:box         (%formel;)*>            
<!ELEMENT st32:roman      (%formel;)* > 
<!ELEMENT st32:italic       (%formel;)* >
<!ELEMENT st32:middle    (#PCDATA) >             
<!ATTLIST st32:box style (%style;) "single"  >
<!ATTLIST st32:middle style (%style;) "single"  >
<!ELEMENT st32:ov         (%formel;)* >           
<!ATTLIST st32:ov     pos      (above|below|mid) "above"
                                                
                 type     (%type;)   "bar"       
                 style    (%style;)  "single">   
<!ELEMENT st32:tensor     (%formel;)*      >      
<!ATTLIST st32:tensor posf     (sub|sup)  "sup"       
                 suffix   CDATA   #REQUIRED  >   




